name: test-macos
on:
  push:
    branches:
      - main
jobs:
  test-macos:
    runs-on: [self-hosted, macOS, X64, sp53]
    strategy:
      matrix: 
        node: 
          - 14
          - 16
          - lts/*

    steps:
    - uses: actions/checkout@v2
    - name: Debugging 1
      run: pwd && ls -la
      working-directory: src
    - name: Setup node
      uses: actions/setup-node@v2
      with: 
        node-version: ${{ matrix.node }}
    - name: Install modules
      run: npm install
      working-directory: src
    - name: Debugging 2
      run: pwd && ls -la
      working-directory: src
    - name: Run tests
      run: npm run test
      working-directory: src
      env:
        BSI_CONTENT_LIBRARY: 'abc 123'
        BSI_HOST: ${{ secrets.BSI_HOST }}
        BSI_APP_ID: 'a3e0f5d2-000a-464f-998d-33d333b175d7'
        BSI_LOGON_USER_DIR: ${{ secrets.BSI_LOGON_USER_DIR }}
        BSI_LOGON_USER_ID: ${{ secrets.BSI_LOGON_USER_ID }}
        BSI_LOGON_PWD: ${{ secrets.BSI_LOGON_PWD }}
        BSI_TEST_TIMEOUT: 120000
        BSI_CERT_FILE: ${{ secrets.BSI_MAC_CERT_FILE }}
        BSI_CERT_KEY_FILE: ${{ secrets.BSI_MAC_CERT_KEY_FILE }}
        # BSI_CERT: ${{ secrets.BSI_CERT }}
        # BSI_CERT_KEY: ${{ secrets.BSI_CERT_KEY }}

    - name: Dump job status
      if: always()
      env:
        status: ${{job.status}}        
      run: echo $status

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJSON(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJSON(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJSON(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: echo "$MATRIX_CONTEXT"
      
    - name: Send job status to MQTT when done
      uses: potaesm/github-actions-mqtt-request@1.0.0
      if: always()
      env:
        status: ${{job.status}}        
      with:
        url: mqtt://192.168.100.20:1884
        topic: control/sp53/mac-build1/action-runner
        payload: '{ "repo": "ptarmiganlabs/butler-sheet-icons", "status":"${{ env.status }}" }'
        # wsOptions: '{ "port": 443 }'
        # username: user
        # password: p@ssw0rd
        connectTimeout: 30000
        